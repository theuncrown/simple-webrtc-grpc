syntax = "proto3";

package signaling;
option go_package = "/signaling";

service signaling   {
    //rpc Login(LoginRequest) returns (LoginReply) {}

    // rpc LoginBidi(stream LoginRequest) returns (stream LoginReply) {}

    // rpc OfferBidi(stream OfferRequest) returns (stream OfferReceive){}
    
    // rpc AnswerBidi(stream AnswerRequest) returns (stream AnswerReceive){}
    
    rpc Signal(stream SignalRequest) returns (stream SignalReply) {}
}

// loginReq (uid string, password string)
// offerReq (uid string, sdp bytes)
// offerReceive(uid string, sdp bytes)
// answerReq ( uid string, sdp bytes)
// answerReceive( uid string, sdp bytes)
// iceCandidate(uid string, candidateInit string)

message SignalRequest {
    string uuid = 1;
    oneof payload {
        LoginRequest login = 2;
        OfferRequest offer = 3;
        AnswerRequest answer = 4;
        string pingUid = 5;
        IceCandidate ice = 6;
    }
}

message SignalReply {
    string uuid = 1;
    oneof payload {
        LoginReply login = 2;
        OfferReceive offer = 3;
        AnswerReceive answer = 4;
        IceCandidate ice = 5;
        string otherUuid = 6;
    }
}

message LoginRequest {
    string Uid = 1;
    string Password = 2;
}

message LoginReply {
    string Uid = 1;
    string Result = 2;
}

message OfferRequest {
    string Uid = 1;
    bytes Sdp = 2;
}

message OfferReceive {
    string Uid = 1;
    bytes Sdp = 2;
    string Result = 3;
}

message AnswerRequest {
    string Uid = 1;
    bytes Sdp = 2;
}

message AnswerReceive {
    string Uid = 1;
    bytes Sdp = 2;
    string Result = 3;
}

message IceCandidate {
    string Uid = 1;
    string CandidateInit = 2;
}